// Generated from grammar/YorubaJava.g4 by ANTLR 4.9.0-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class YorubaJavaLexer extends Lexer {
	public static readonly CLASS = 1;
	public static readonly PUBLIC = 2;
	public static readonly STATIC = 3;
	public static readonly VOID = 4;
	public static readonly MAIN = 5;
	public static readonly PRINT = 6;
	public static readonly LBRACE = 7;
	public static readonly RBRACE = 8;
	public static readonly LPAREN = 9;
	public static readonly RPAREN = 10;
	public static readonly SEMI = 11;
	public static readonly STRING = 12;
	public static readonly ID = 13;
	public static readonly LINE_COMMENT = 14;
	public static readonly BLOCK_COMMENT = 15;
	public static readonly WS = 16;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"CLASS", "PUBLIC", "STATIC", "VOID", "MAIN", "PRINT", "LBRACE", "RBRACE", 
		"LPAREN", "RPAREN", "SEMI", "STRING", "ID", "LINE_COMMENT", "BLOCK_COMMENT", 
		"WS",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'kilasi'", "'gbogbo'", "'diduro'", "'ofe'", "'b\u1EB9r\u1EB9'", 
		"'s\u1ECD'", "'{'", "'}'", "'('", "')'", "';'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, "CLASS", "PUBLIC", "STATIC", "VOID", "MAIN", "PRINT", "LBRACE", 
		"RBRACE", "LPAREN", "RPAREN", "SEMI", "STRING", "ID", "LINE_COMMENT", 
		"BLOCK_COMMENT", "WS",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(YorubaJavaLexer._LITERAL_NAMES, YorubaJavaLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return YorubaJavaLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(YorubaJavaLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "YorubaJava.g4"; }

	// @Override
	public get ruleNames(): string[] { return YorubaJavaLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return YorubaJavaLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return YorubaJavaLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return YorubaJavaLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x02\x12~\b\x01\x04" +
		"\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06\x04" +
		"\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r\t\r" +
		"\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x03\x02\x03\x02" +
		"\x03\x02\x03\x02\x03\x02\x03\x02\x03\x02\x03\x03\x03\x03\x03\x03\x03\x03" +
		"\x03\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04\x03\x04" +
		"\x03\x04\x03\x05\x03\x05\x03\x05\x03\x05\x03\x06\x03\x06\x03\x06\x03\x06" +
		"\x03\x06\x03\x07\x03\x07\x03\x07\x03\b\x03\b\x03\t\x03\t\x03\n\x03\n\x03" +
		"\v\x03\v\x03\f\x03\f\x03\r\x03\r\x07\rQ\n\r\f\r\x0E\rT\v\r\x03\r\x03\r" +
		"\x03\x0E\x03\x0E\x07\x0EZ\n\x0E\f\x0E\x0E\x0E]\v\x0E\x03\x0F\x03\x0F\x03" +
		"\x0F\x03\x0F\x07\x0Fc\n\x0F\f\x0F\x0E\x0Ff\v\x0F\x03\x0F\x03\x0F\x03\x10" +
		"\x03\x10\x03\x10\x03\x10\x07\x10n\n\x10\f\x10\x0E\x10q\v\x10\x03\x10\x03" +
		"\x10\x03\x10\x03\x10\x03\x10\x03\x11\x06\x11y\n\x11\r\x11\x0E\x11z\x03" +
		"\x11\x03\x11\x03o\x02\x02\x12\x03\x02\x03\x05\x02\x04\x07\x02\x05\t\x02" +
		"\x06\v\x02\x07\r\x02\b\x0F\x02\t\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02" +
		"\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02\x10\x1F\x02\x11!\x02\x12\x03\x02\x07" +
		"\x05\x02\f\f\x0F\x0F$$\x05\x02C\\aac|\x06\x022;C\\aac|\x04\x02\f\f\x0F" +
		"\x0F\x05\x02\v\f\x0F\x0F\"\"\x02\x82\x02\x03\x03\x02\x02\x02\x02\x05\x03" +
		"\x02\x02\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02" +
		"\x02\x02\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02" +
		"\x02\x02\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02" +
		"\x02\x02\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02" +
		"\x02\x02\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x03#\x03\x02\x02" +
		"\x02\x05*\x03\x02\x02\x02\x071\x03\x02\x02\x02\t8\x03\x02\x02\x02\v<\x03" +
		"\x02\x02\x02\rA\x03\x02\x02\x02\x0FD\x03\x02\x02\x02\x11F\x03\x02\x02" +
		"\x02\x13H\x03\x02\x02\x02\x15J\x03\x02\x02\x02\x17L\x03\x02\x02\x02\x19" +
		"N\x03\x02\x02\x02\x1BW\x03\x02\x02\x02\x1D^\x03\x02\x02\x02\x1Fi\x03\x02" +
		"\x02\x02!x\x03\x02\x02\x02#$\x07m\x02\x02$%\x07k\x02\x02%&\x07n\x02\x02" +
		"&\'\x07c\x02\x02\'(\x07u\x02\x02()\x07k\x02\x02)\x04\x03\x02\x02\x02*" +
		"+\x07i\x02\x02+,\x07d\x02\x02,-\x07q\x02\x02-.\x07i\x02\x02./\x07d\x02" +
		"\x02/0\x07q\x02\x020\x06\x03\x02\x02\x0212\x07f\x02\x0223\x07k\x02\x02" +
		"34\x07f\x02\x0245\x07w\x02\x0256\x07t\x02\x0267\x07q\x02\x027\b\x03\x02" +
		"\x02\x0289\x07q\x02\x029:\x07h\x02\x02:;\x07g\x02\x02;\n\x03\x02\x02\x02" +
		"<=\x07d\x02\x02=>\x07\u1EBB\x02\x02>?\x07t\x02\x02?@\x07\u1EBB\x02\x02" +
		"@\f\x03\x02\x02\x02AB\x07u\x02\x02BC\x07\u1ECF\x02\x02C\x0E\x03\x02\x02" +
		"\x02DE\x07}\x02\x02E\x10\x03\x02\x02\x02FG\x07\x7F\x02\x02G\x12\x03\x02" +
		"\x02\x02HI\x07*\x02\x02I\x14\x03\x02\x02\x02JK\x07+\x02\x02K\x16\x03\x02" +
		"\x02\x02LM\x07=\x02\x02M\x18\x03\x02\x02\x02NR\x07$\x02\x02OQ\n\x02\x02" +
		"\x02PO\x03\x02\x02\x02QT\x03\x02\x02\x02RP\x03\x02\x02\x02RS\x03\x02\x02" +
		"\x02SU\x03\x02\x02\x02TR\x03\x02\x02\x02UV\x07$\x02\x02V\x1A\x03\x02\x02" +
		"\x02W[\t\x03\x02\x02XZ\t\x04\x02\x02YX\x03\x02\x02\x02Z]\x03\x02\x02\x02" +
		"[Y\x03\x02\x02\x02[\\\x03\x02\x02\x02\\\x1C\x03\x02\x02\x02][\x03\x02" +
		"\x02\x02^_\x071\x02\x02_`\x071\x02\x02`d\x03\x02\x02\x02ac\n\x05\x02\x02" +
		"ba\x03\x02\x02\x02cf\x03\x02\x02\x02db\x03\x02\x02\x02de\x03\x02\x02\x02" +
		"eg\x03\x02\x02\x02fd\x03\x02\x02\x02gh\b\x0F\x02\x02h\x1E\x03\x02\x02" +
		"\x02ij\x071\x02\x02jk\x07,\x02\x02ko\x03\x02\x02\x02ln\v\x02\x02\x02m" +
		"l\x03\x02\x02\x02nq\x03\x02\x02\x02op\x03\x02\x02\x02om\x03\x02\x02\x02" +
		"pr\x03\x02\x02\x02qo\x03\x02\x02\x02rs\x07,\x02\x02st\x071\x02\x02tu\x03" +
		"\x02\x02\x02uv\b\x10\x02\x02v \x03\x02\x02\x02wy\t\x06\x02\x02xw\x03\x02" +
		"\x02\x02yz\x03\x02\x02\x02zx\x03\x02\x02\x02z{\x03\x02\x02\x02{|\x03\x02" +
		"\x02\x02|}\b\x11\x02\x02}\"\x03\x02\x02\x02\b\x02R[doz\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!YorubaJavaLexer.__ATN) {
			YorubaJavaLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(YorubaJavaLexer._serializedATN));
		}

		return YorubaJavaLexer.__ATN;
	}

}

